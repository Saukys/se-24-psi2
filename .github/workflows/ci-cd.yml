name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  DOTNET_VERSION: '8.0.x'
  SOLUTION_NAME: se-24.sln

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Restore dependencies
      run: dotnet restore ${{ env.SOLUTION_NAME }}

    - name: Build
      run: dotnet build ${{ env.SOLUTION_NAME }} --configuration Release --no-restore

    - name: Test
      run: dotnet test ${{ env.SOLUTION_NAME }} --configuration Release --no-build --collect:"XPlat Code Coverage"

    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results
        path: |
          **/TestResults/
          **/coverage.cobertura.xml

  deploy:
    needs: build-and-test
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Publish Frontend
      run: |
        dotnet publish se-24.frontend/se-24.frontend.csproj \
          --configuration Release \
          --output ./publish/frontend

    - name: Publish Backend
      run: |
        dotnet publish se-24.backend/se-24.backend.csproj \
          --configuration Release \
          --output ./publish/backend

    - name: Upload Frontend Artifact
      uses: actions/upload-artifact@v4
      with:
        name: frontend-artifact
        path: ./publish/frontend

    - name: Upload Backend Artifact
      uses: actions/upload-artifact@v4
      with:
        name: backend-artifact
        path: ./publish/backend
