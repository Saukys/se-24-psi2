@page "/reading/{level:int}/"
@rendermode InteractiveServer
@using se_24.src.Games.ReadingGame

<PageTitle>Reading</PageTitle>

<h1>Reading Level @readingGame.level</h1>

@if (readingGame.isStartScreen)
{
    <p>Click the button below to start the reading level.</p>
    <button @onclick="readingGame.OnStartClick">Start Reading Level</button>
}
else if (readingGame.isReadingScreen)
{
    <p role="timer">Time: @readingGame.taskTimer</p>
    <p>@readingGame.text</p>

    <button @onclick="readingGame.OnReadingFinished">I've already read it!</button>
}
else if (readingGame.isQuestionsScreen)
{
    <h2>@readingGame.currentQuestion Question! Please select the correct answer.</h2>
    <p>@readingGame.question</p>

    <button @onclick="() => readingGame.AnswerClick(1)" disabled="@readingGame.isButtonsDisabled">@readingGame.answer1</button>
    <button @onclick="() => readingGame.AnswerClick(2)" disabled="@readingGame.isButtonsDisabled">@readingGame.answer2</button>
    <button @onclick="() => readingGame.AnswerClick(3)" disabled="@readingGame.isButtonsDisabled">@readingGame.answer3</button>
    <button @onclick="() => readingGame.AnswerClick(4)" disabled="@readingGame.isButtonsDisabled">@readingGame.answer4</button>

    @if (readingGame.isNextButtonEnabled || readingGame.isEndButtonEnabled)
    {
        <p>Your answer: @readingGame.correct</p>
        if (readingGame.isNextButtonEnabled)
        {
            <button @onclick="readingGame.OnNextQuestion">Next Question</button>
        }
        else if (readingGame.isEndButtonEnabled)
        {
            <button @onclick="readingGame.OnEndLevel">End Level</button>
        }
    }
}
else if (readingGame.isEndScreen)
{
    <p>Game Over!</p>
    <p>Your score is: @readingGame.score</p>
    <button @onclick="readingGame.OnRestartClick">Restart</button>
}

@code {
    private ReadingB readingGame;
    [Parameter]
    public int level { get; set; } = 1;


    protected override async Task OnInitializedAsync()
    {
        readingGame = new ReadingB();
        readingGame.level = level; // Set the level parameter from the URL
        readingGame.OnUIUpdate = StateHasChanged;
        await readingGame.OnInitializedAsync(level); // Initialize the game logic
    }
}
